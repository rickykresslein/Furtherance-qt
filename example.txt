    std::vector<SavedItems> taskByDayMatch;
    std::vector<SavedItems> taskByDayMismatch;
    for (SavedItems stored : savedTimes) {
        dayAndMonth = stored.startTime.toString("MMM d").toStdString();
        bool daysMatch = false;
        for (std::vector<SavedItems> thisTaskByDay : tasksByDay) {
            if (thisTaskByDay[0].startTime.toString("MMM d").toStdString() == dayAndMonth) {
                taskByDayMatch.push_back(stored);
                daysMatch = true;
                break;
            }
        }
        if (tasksByDay.size() == 0) {
            taskByDayMatch.push_back(stored);
            daysMatch = true;
        }
        if (!daysMatch) {
            taskByDayMismatch.push_back(stored);
        }
    }
    tasksByDay.push_back(taskByDay);


    // First Try

        for (SavedItems stored : savedTimes) {
        dayAndMonth = stored.startTime.toString("MMM d").toStdString();
        bool daysMatch = false;
        for (std::vector<SavedItems> thisTaskByDay : tasksByDay) {
            if (thisTaskByDay[0].startTime.toString("MMM d").toStdString() == dayAndMonth) {
                thisTaskByDay.push_back(stored);
                daysMatch = true;
                std::cout << "They match" << '\n';
                break;
            }
        }
        if (tasksByDay.size() == 0) {
            std::vector<SavedItems> firstItem;
            firstItem.push_back(stored);
            tasksByDay.push_back(firstItem);
        } else if (!daysMatch) {
            std::vector<SavedItems> taskByDay;
            taskByDay.push_back(stored);
            tasksByDay.push_back(taskByDay);
            std::cout << "Don't match" << '\n';
        }
    }
//    for (std::vector<SavedItems> testCheckVec : tasksByDay) {
//        for (SavedItems testCheck : testCheckVec) {
//            std::cout << "Items: " << testCheck.thisTask << '\n';
//        }
//    }
